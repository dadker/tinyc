Grammar

    0 $accept: Program $end

    1 FunctionArgList: '&' ID
    2                | Expression
    3                | Expression ',' FunctionArgList

    4 UnaryExpression: CONSTANT
    5                | ID
    6                | ID '(' FunctionArgList ')'
    7                | ID '(' ')'
    8                | '(' Expression ')'
    9                | '+' UnaryExpression
   10                | '-' UnaryExpression

   11 MultiplicativeExpression: UnaryExpression
   12                         | MultiplicativeExpression '*' UnaryExpression
   13                         | MultiplicativeExpression '/' UnaryExpression

   14 AdditiveExpression: MultiplicativeExpression
   15                   | AdditiveExpression '+' AdditiveExpression
   16                   | AdditiveExpression '-' AdditiveExpression

   17 ComparisonExpression: AdditiveExpression
   18                     | AdditiveExpression LT AdditiveExpression
   19                     | AdditiveExpression LE AdditiveExpression
   20                     | AdditiveExpression GT AdditiveExpression
   21                     | AdditiveExpression GE AdditiveExpression

   22 Expression: ComparisonExpression
   23           | ComparisonExpression EQ ComparisonExpression
   24           | ComparisonExpression NE ComparisonExpression

   25 AssignmentStatment: ID '=' Expression ';'

   26 IfStatement: IF '(' Expression ')' Statement
   27            | IF '(' Expression ')' Statement ELSE Statement

   28 WhileStatement: WHILE '(' Expression ')' Statement

   29 ReturnStatement: RETURN ';'
   30                | RETURN Expression ';'

   31 StatementList: %empty
   32              | Statement StatementList

   33 BlockStatement: '{' StatementList '}'

   34 EmptyStatement: ';'

   35 Statement: AssignmentStatment
   36          | IfStatement
   37          | WhileStatement
   38          | ReturnStatement
   39          | BlockStatement
   40          | EmptyStatement

   41 Type: INT
   42     | CHAR
   43     | FLOAT

   44 ReturnType: VOID
   45           | Type

   46 FunctionParameter: Type ID

   47 FunctionParameterList: FunctionParameter
   48                      | FunctionParameter ',' FunctionParameterList

   49 VariableDefinition: Type ID '=' CONSTANT ';'

   50 VariableDefinitionList: %empty
   51                       | VariableDefinition VariableDefinitionList

   52 FunctionStatementList: ReturnStatement
   53                      | Statement FunctionStatementList

   54 FunctionBody: VariableDefinitionList FunctionStatementList

   55 FunctionDefinition: ReturnType ID '(' FunctionParameterList ')' '{' FunctionBody '}'
   56                   | ReturnType ID '(' VOID ')' '{' FunctionBody '}'

   57 FunctionDefinitionList: %empty
   58                       | FunctionDefinition FunctionDefinitionList

   59 MainFunction: MAIN '(' VOID ')' '{' FunctionBody '}'

   60 Program: FunctionDefinitionList MainFunction FunctionDefinitionList


Terminals, with rules where they appear

$end (0) 0
'&' (38) 1
'(' (40) 6 7 8 26 27 28 55 56 59
')' (41) 6 7 8 26 27 28 55 56 59
'*' (42) 12
'+' (43) 9 15
',' (44) 3 48
'-' (45) 10 16
'/' (47) 13
';' (59) 25 29 30 34 49
'=' (61) 25 49
'{' (123) 33 55 56 59
'}' (125) 33 55 56 59
error (256)
CHAR (258) 42
ELSE (259) 27
FLOAT (260) 43
IF (261) 26 27
INT (262) 41
RETURN (263) 29 30
VOID (264) 44 56 59
WHILE (265) 28
MAIN (266) 59
EQ (267) 23
NE (268) 24
LT (269) 18
LE (270) 19
GT (271) 20
GE (272) 21
CONSTANT (273) 4 49
ID (274) 1 5 6 7 25 46 49 55 56
LOWER_THAN_ELSE (275)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
FunctionArgList (34)
    on left: 1 2 3, on right: 3 6
UnaryExpression (35)
    on left: 4 5 6 7 8 9 10, on right: 9 10 11 12 13
MultiplicativeExpression (36)
    on left: 11 12 13, on right: 12 13 14
AdditiveExpression (37)
    on left: 14 15 16, on right: 15 16 17 18 19 20 21
ComparisonExpression (38)
    on left: 17 18 19 20 21, on right: 22 23 24
Expression (39)
    on left: 22 23 24, on right: 2 3 8 25 26 27 28 30
AssignmentStatment (40)
    on left: 25, on right: 35
IfStatement (41)
    on left: 26 27, on right: 36
WhileStatement (42)
    on left: 28, on right: 37
ReturnStatement (43)
    on left: 29 30, on right: 38 52
StatementList (44)
    on left: 31 32, on right: 32 33
BlockStatement (45)
    on left: 33, on right: 39
EmptyStatement (46)
    on left: 34, on right: 40
Statement (47)
    on left: 35 36 37 38 39 40, on right: 26 27 28 32 53
Type (48)
    on left: 41 42 43, on right: 45 46 49
ReturnType (49)
    on left: 44 45, on right: 55 56
FunctionParameter (50)
    on left: 46, on right: 47 48
FunctionParameterList (51)
    on left: 47 48, on right: 48 55
VariableDefinition (52)
    on left: 49, on right: 51
VariableDefinitionList (53)
    on left: 50 51, on right: 51 54
FunctionStatementList (54)
    on left: 52 53, on right: 53 54
FunctionBody (55)
    on left: 54, on right: 55 56 59
FunctionDefinition (56)
    on left: 55 56, on right: 58
FunctionDefinitionList (57)
    on left: 57 58, on right: 58 60
MainFunction (58)
    on left: 59, on right: 60
Program (59)
    on left: 60, on right: 0


State 0

    0 $accept: . Program $end

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    $default  reduce using rule 57 (FunctionDefinitionList)

    Type                    go to state 5
    ReturnType              go to state 6
    FunctionDefinition      go to state 7
    FunctionDefinitionList  go to state 8
    Program                 go to state 9


State 1

   42 Type: CHAR .

    $default  reduce using rule 42 (Type)


State 2

   43 Type: FLOAT .

    $default  reduce using rule 43 (Type)


State 3

   41 Type: INT .

    $default  reduce using rule 41 (Type)


State 4

   44 ReturnType: VOID .

    $default  reduce using rule 44 (ReturnType)


State 5

   45 ReturnType: Type .

    $default  reduce using rule 45 (ReturnType)


State 6

   55 FunctionDefinition: ReturnType . ID '(' FunctionParameterList ')' '{' FunctionBody '}'
   56                   | ReturnType . ID '(' VOID ')' '{' FunctionBody '}'

    ID  shift, and go to state 10


State 7

   58 FunctionDefinitionList: FunctionDefinition . FunctionDefinitionList

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    $default  reduce using rule 57 (FunctionDefinitionList)

    Type                    go to state 5
    ReturnType              go to state 6
    FunctionDefinition      go to state 7
    FunctionDefinitionList  go to state 11


State 8

   60 Program: FunctionDefinitionList . MainFunction FunctionDefinitionList

    MAIN  shift, and go to state 12

    MainFunction  go to state 13


State 9

    0 $accept: Program . $end

    $end  shift, and go to state 14


State 10

   55 FunctionDefinition: ReturnType ID . '(' FunctionParameterList ')' '{' FunctionBody '}'
   56                   | ReturnType ID . '(' VOID ')' '{' FunctionBody '}'

    '('  shift, and go to state 15


State 11

   58 FunctionDefinitionList: FunctionDefinition FunctionDefinitionList .

    $default  reduce using rule 58 (FunctionDefinitionList)


State 12

   59 MainFunction: MAIN . '(' VOID ')' '{' FunctionBody '}'

    '('  shift, and go to state 16


State 13

   60 Program: FunctionDefinitionList MainFunction . FunctionDefinitionList

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    $default  reduce using rule 57 (FunctionDefinitionList)

    Type                    go to state 5
    ReturnType              go to state 6
    FunctionDefinition      go to state 7
    FunctionDefinitionList  go to state 17


State 14

    0 $accept: Program $end .

    $default  accept


State 15

   55 FunctionDefinition: ReturnType ID '(' . FunctionParameterList ')' '{' FunctionBody '}'
   56                   | ReturnType ID '(' . VOID ')' '{' FunctionBody '}'

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 18

    Type                   go to state 19
    FunctionParameter      go to state 20
    FunctionParameterList  go to state 21


State 16

   59 MainFunction: MAIN '(' . VOID ')' '{' FunctionBody '}'

    VOID  shift, and go to state 22


State 17

   60 Program: FunctionDefinitionList MainFunction FunctionDefinitionList .

    $default  reduce using rule 60 (Program)


State 18

   56 FunctionDefinition: ReturnType ID '(' VOID . ')' '{' FunctionBody '}'

    ')'  shift, and go to state 23


State 19

   46 FunctionParameter: Type . ID

    ID  shift, and go to state 24


State 20

   47 FunctionParameterList: FunctionParameter .
   48                      | FunctionParameter . ',' FunctionParameterList

    ','  shift, and go to state 25

    $default  reduce using rule 47 (FunctionParameterList)


State 21

   55 FunctionDefinition: ReturnType ID '(' FunctionParameterList . ')' '{' FunctionBody '}'

    ')'  shift, and go to state 26


State 22

   59 MainFunction: MAIN '(' VOID . ')' '{' FunctionBody '}'

    ')'  shift, and go to state 27


State 23

   56 FunctionDefinition: ReturnType ID '(' VOID ')' . '{' FunctionBody '}'

    '{'  shift, and go to state 28


State 24

   46 FunctionParameter: Type ID .

    $default  reduce using rule 46 (FunctionParameter)


State 25

   48 FunctionParameterList: FunctionParameter ',' . FunctionParameterList

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    Type                   go to state 19
    FunctionParameter      go to state 20
    FunctionParameterList  go to state 29


State 26

   55 FunctionDefinition: ReturnType ID '(' FunctionParameterList ')' . '{' FunctionBody '}'

    '{'  shift, and go to state 30


State 27

   59 MainFunction: MAIN '(' VOID ')' . '{' FunctionBody '}'

    '{'  shift, and go to state 31


State 28

   56 FunctionDefinition: ReturnType ID '(' VOID ')' '{' . FunctionBody '}'

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    $default  reduce using rule 50 (VariableDefinitionList)

    Type                    go to state 32
    VariableDefinition      go to state 33
    VariableDefinitionList  go to state 34
    FunctionBody            go to state 35


State 29

   48 FunctionParameterList: FunctionParameter ',' FunctionParameterList .

    $default  reduce using rule 48 (FunctionParameterList)


State 30

   55 FunctionDefinition: ReturnType ID '(' FunctionParameterList ')' '{' . FunctionBody '}'

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    $default  reduce using rule 50 (VariableDefinitionList)

    Type                    go to state 32
    VariableDefinition      go to state 33
    VariableDefinitionList  go to state 34
    FunctionBody            go to state 36


State 31

   59 MainFunction: MAIN '(' VOID ')' '{' . FunctionBody '}'

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    $default  reduce using rule 50 (VariableDefinitionList)

    Type                    go to state 32
    VariableDefinition      go to state 33
    VariableDefinitionList  go to state 34
    FunctionBody            go to state 37


State 32

   49 VariableDefinition: Type . ID '=' CONSTANT ';'

    ID  shift, and go to state 38


State 33

   51 VariableDefinitionList: VariableDefinition . VariableDefinitionList

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    $default  reduce using rule 50 (VariableDefinitionList)

    Type                    go to state 32
    VariableDefinition      go to state 33
    VariableDefinitionList  go to state 39


State 34

   54 FunctionBody: VariableDefinitionList . FunctionStatementList

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    ';'     shift, and go to state 44
    '{'     shift, and go to state 45

    AssignmentStatment     go to state 46
    IfStatement            go to state 47
    WhileStatement         go to state 48
    ReturnStatement        go to state 49
    BlockStatement         go to state 50
    EmptyStatement         go to state 51
    Statement              go to state 52
    FunctionStatementList  go to state 53


State 35

   56 FunctionDefinition: ReturnType ID '(' VOID ')' '{' FunctionBody . '}'

    '}'  shift, and go to state 54


State 36

   55 FunctionDefinition: ReturnType ID '(' FunctionParameterList ')' '{' FunctionBody . '}'

    '}'  shift, and go to state 55


State 37

   59 MainFunction: MAIN '(' VOID ')' '{' FunctionBody . '}'

    '}'  shift, and go to state 56


State 38

   49 VariableDefinition: Type ID . '=' CONSTANT ';'

    '='  shift, and go to state 57


State 39

   51 VariableDefinitionList: VariableDefinition VariableDefinitionList .

    $default  reduce using rule 51 (VariableDefinitionList)


State 40

   26 IfStatement: IF . '(' Expression ')' Statement
   27            | IF . '(' Expression ')' Statement ELSE Statement

    '('  shift, and go to state 58


State 41

   29 ReturnStatement: RETURN . ';'
   30                | RETURN . Expression ';'

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63
    ';'       shift, and go to state 64

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 67
    ComparisonExpression      go to state 68
    Expression                go to state 69


State 42

   28 WhileStatement: WHILE . '(' Expression ')' Statement

    '('  shift, and go to state 70


State 43

   25 AssignmentStatment: ID . '=' Expression ';'

    '='  shift, and go to state 71


State 44

   34 EmptyStatement: ';' .

    $default  reduce using rule 34 (EmptyStatement)


State 45

   33 BlockStatement: '{' . StatementList '}'

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    ';'     shift, and go to state 44
    '{'     shift, and go to state 45

    $default  reduce using rule 31 (StatementList)

    AssignmentStatment  go to state 46
    IfStatement         go to state 47
    WhileStatement      go to state 48
    ReturnStatement     go to state 72
    StatementList       go to state 73
    BlockStatement      go to state 50
    EmptyStatement      go to state 51
    Statement           go to state 74


State 46

   35 Statement: AssignmentStatment .

    $default  reduce using rule 35 (Statement)


State 47

   36 Statement: IfStatement .

    $default  reduce using rule 36 (Statement)


State 48

   37 Statement: WhileStatement .

    $default  reduce using rule 37 (Statement)


State 49

   38 Statement: ReturnStatement .
   52 FunctionStatementList: ReturnStatement .

    '}'       reduce using rule 52 (FunctionStatementList)
    $default  reduce using rule 38 (Statement)


State 50

   39 Statement: BlockStatement .

    $default  reduce using rule 39 (Statement)


State 51

   40 Statement: EmptyStatement .

    $default  reduce using rule 40 (Statement)


State 52

   53 FunctionStatementList: Statement . FunctionStatementList

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    ';'     shift, and go to state 44
    '{'     shift, and go to state 45

    AssignmentStatment     go to state 46
    IfStatement            go to state 47
    WhileStatement         go to state 48
    ReturnStatement        go to state 49
    BlockStatement         go to state 50
    EmptyStatement         go to state 51
    Statement              go to state 52
    FunctionStatementList  go to state 75


State 53

   54 FunctionBody: VariableDefinitionList FunctionStatementList .

    $default  reduce using rule 54 (FunctionBody)


State 54

   56 FunctionDefinition: ReturnType ID '(' VOID ')' '{' FunctionBody '}' .

    $default  reduce using rule 56 (FunctionDefinition)


State 55

   55 FunctionDefinition: ReturnType ID '(' FunctionParameterList ')' '{' FunctionBody '}' .

    $default  reduce using rule 55 (FunctionDefinition)


State 56

   59 MainFunction: MAIN '(' VOID ')' '{' FunctionBody '}' .

    $default  reduce using rule 59 (MainFunction)


State 57

   49 VariableDefinition: Type ID '=' . CONSTANT ';'

    CONSTANT  shift, and go to state 76


State 58

   26 IfStatement: IF '(' . Expression ')' Statement
   27            | IF '(' . Expression ')' Statement ELSE Statement

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 67
    ComparisonExpression      go to state 68
    Expression                go to state 77


State 59

    4 UnaryExpression: CONSTANT .

    $default  reduce using rule 4 (UnaryExpression)


State 60

    5 UnaryExpression: ID .
    6                | ID . '(' FunctionArgList ')'
    7                | ID . '(' ')'

    '('  shift, and go to state 78

    $default  reduce using rule 5 (UnaryExpression)


State 61

    9 UnaryExpression: '+' . UnaryExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression  go to state 79


State 62

   10 UnaryExpression: '-' . UnaryExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression  go to state 80


State 63

    8 UnaryExpression: '(' . Expression ')'

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 67
    ComparisonExpression      go to state 68
    Expression                go to state 81


State 64

   29 ReturnStatement: RETURN ';' .

    $default  reduce using rule 29 (ReturnStatement)


State 65

   11 MultiplicativeExpression: UnaryExpression .

    $default  reduce using rule 11 (MultiplicativeExpression)


State 66

   12 MultiplicativeExpression: MultiplicativeExpression . '*' UnaryExpression
   13                         | MultiplicativeExpression . '/' UnaryExpression
   14 AdditiveExpression: MultiplicativeExpression .

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 14 (AdditiveExpression)


State 67

   15 AdditiveExpression: AdditiveExpression . '+' AdditiveExpression
   16                   | AdditiveExpression . '-' AdditiveExpression
   17 ComparisonExpression: AdditiveExpression .
   18                     | AdditiveExpression . LT AdditiveExpression
   19                     | AdditiveExpression . LE AdditiveExpression
   20                     | AdditiveExpression . GT AdditiveExpression
   21                     | AdditiveExpression . GE AdditiveExpression

    LT   shift, and go to state 84
    LE   shift, and go to state 85
    GT   shift, and go to state 86
    GE   shift, and go to state 87
    '+'  shift, and go to state 88
    '-'  shift, and go to state 89

    $default  reduce using rule 17 (ComparisonExpression)


State 68

   22 Expression: ComparisonExpression .
   23           | ComparisonExpression . EQ ComparisonExpression
   24           | ComparisonExpression . NE ComparisonExpression

    EQ  shift, and go to state 90
    NE  shift, and go to state 91

    $default  reduce using rule 22 (Expression)


State 69

   30 ReturnStatement: RETURN Expression . ';'

    ';'  shift, and go to state 92


State 70

   28 WhileStatement: WHILE '(' . Expression ')' Statement

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 67
    ComparisonExpression      go to state 68
    Expression                go to state 93


State 71

   25 AssignmentStatment: ID '=' . Expression ';'

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 67
    ComparisonExpression      go to state 68
    Expression                go to state 94


State 72

   38 Statement: ReturnStatement .

    $default  reduce using rule 38 (Statement)


State 73

   33 BlockStatement: '{' StatementList . '}'

    '}'  shift, and go to state 95


State 74

   32 StatementList: Statement . StatementList

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    ';'     shift, and go to state 44
    '{'     shift, and go to state 45

    $default  reduce using rule 31 (StatementList)

    AssignmentStatment  go to state 46
    IfStatement         go to state 47
    WhileStatement      go to state 48
    ReturnStatement     go to state 72
    StatementList       go to state 96
    BlockStatement      go to state 50
    EmptyStatement      go to state 51
    Statement           go to state 74


State 75

   53 FunctionStatementList: Statement FunctionStatementList .

    $default  reduce using rule 53 (FunctionStatementList)


State 76

   49 VariableDefinition: Type ID '=' CONSTANT . ';'

    ';'  shift, and go to state 97


State 77

   26 IfStatement: IF '(' Expression . ')' Statement
   27            | IF '(' Expression . ')' Statement ELSE Statement

    ')'  shift, and go to state 98


State 78

    6 UnaryExpression: ID '(' . FunctionArgList ')'
    7                | ID '(' . ')'

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '&'       shift, and go to state 99
    '('       shift, and go to state 63
    ')'       shift, and go to state 100

    FunctionArgList           go to state 101
    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 67
    ComparisonExpression      go to state 68
    Expression                go to state 102


State 79

    9 UnaryExpression: '+' UnaryExpression .

    $default  reduce using rule 9 (UnaryExpression)


State 80

   10 UnaryExpression: '-' UnaryExpression .

    $default  reduce using rule 10 (UnaryExpression)


State 81

    8 UnaryExpression: '(' Expression . ')'

    ')'  shift, and go to state 103


State 82

   12 MultiplicativeExpression: MultiplicativeExpression '*' . UnaryExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression  go to state 104


State 83

   13 MultiplicativeExpression: MultiplicativeExpression '/' . UnaryExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression  go to state 105


State 84

   18 ComparisonExpression: AdditiveExpression LT . AdditiveExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 106


State 85

   19 ComparisonExpression: AdditiveExpression LE . AdditiveExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 107


State 86

   20 ComparisonExpression: AdditiveExpression GT . AdditiveExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 108


State 87

   21 ComparisonExpression: AdditiveExpression GE . AdditiveExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 109


State 88

   15 AdditiveExpression: AdditiveExpression '+' . AdditiveExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 110


State 89

   16 AdditiveExpression: AdditiveExpression '-' . AdditiveExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 111


State 90

   23 Expression: ComparisonExpression EQ . ComparisonExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 67
    ComparisonExpression      go to state 112


State 91

   24 Expression: ComparisonExpression NE . ComparisonExpression

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '('       shift, and go to state 63

    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 67
    ComparisonExpression      go to state 113


State 92

   30 ReturnStatement: RETURN Expression ';' .

    $default  reduce using rule 30 (ReturnStatement)


State 93

   28 WhileStatement: WHILE '(' Expression . ')' Statement

    ')'  shift, and go to state 114


State 94

   25 AssignmentStatment: ID '=' Expression . ';'

    ';'  shift, and go to state 115


State 95

   33 BlockStatement: '{' StatementList '}' .

    $default  reduce using rule 33 (BlockStatement)


State 96

   32 StatementList: Statement StatementList .

    $default  reduce using rule 32 (StatementList)


State 97

   49 VariableDefinition: Type ID '=' CONSTANT ';' .

    $default  reduce using rule 49 (VariableDefinition)


State 98

   26 IfStatement: IF '(' Expression ')' . Statement
   27            | IF '(' Expression ')' . Statement ELSE Statement

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    ';'     shift, and go to state 44
    '{'     shift, and go to state 45

    AssignmentStatment  go to state 46
    IfStatement         go to state 47
    WhileStatement      go to state 48
    ReturnStatement     go to state 72
    BlockStatement      go to state 50
    EmptyStatement      go to state 51
    Statement           go to state 116


State 99

    1 FunctionArgList: '&' . ID

    ID  shift, and go to state 117


State 100

    7 UnaryExpression: ID '(' ')' .

    $default  reduce using rule 7 (UnaryExpression)


State 101

    6 UnaryExpression: ID '(' FunctionArgList . ')'

    ')'  shift, and go to state 118


State 102

    2 FunctionArgList: Expression .
    3                | Expression . ',' FunctionArgList

    ','  shift, and go to state 119

    $default  reduce using rule 2 (FunctionArgList)


State 103

    8 UnaryExpression: '(' Expression ')' .

    $default  reduce using rule 8 (UnaryExpression)


State 104

   12 MultiplicativeExpression: MultiplicativeExpression '*' UnaryExpression .

    $default  reduce using rule 12 (MultiplicativeExpression)


State 105

   13 MultiplicativeExpression: MultiplicativeExpression '/' UnaryExpression .

    $default  reduce using rule 13 (MultiplicativeExpression)


State 106

   15 AdditiveExpression: AdditiveExpression . '+' AdditiveExpression
   16                   | AdditiveExpression . '-' AdditiveExpression
   18 ComparisonExpression: AdditiveExpression LT AdditiveExpression .

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89

    $default  reduce using rule 18 (ComparisonExpression)


State 107

   15 AdditiveExpression: AdditiveExpression . '+' AdditiveExpression
   16                   | AdditiveExpression . '-' AdditiveExpression
   19 ComparisonExpression: AdditiveExpression LE AdditiveExpression .

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89

    $default  reduce using rule 19 (ComparisonExpression)


State 108

   15 AdditiveExpression: AdditiveExpression . '+' AdditiveExpression
   16                   | AdditiveExpression . '-' AdditiveExpression
   20 ComparisonExpression: AdditiveExpression GT AdditiveExpression .

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89

    $default  reduce using rule 20 (ComparisonExpression)


State 109

   15 AdditiveExpression: AdditiveExpression . '+' AdditiveExpression
   16                   | AdditiveExpression . '-' AdditiveExpression
   21 ComparisonExpression: AdditiveExpression GE AdditiveExpression .

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89

    $default  reduce using rule 21 (ComparisonExpression)


State 110

   15 AdditiveExpression: AdditiveExpression . '+' AdditiveExpression
   15                   | AdditiveExpression '+' AdditiveExpression .
   16                   | AdditiveExpression . '-' AdditiveExpression

    $default  reduce using rule 15 (AdditiveExpression)


State 111

   15 AdditiveExpression: AdditiveExpression . '+' AdditiveExpression
   16                   | AdditiveExpression . '-' AdditiveExpression
   16                   | AdditiveExpression '-' AdditiveExpression .

    $default  reduce using rule 16 (AdditiveExpression)


State 112

   23 Expression: ComparisonExpression EQ ComparisonExpression .

    $default  reduce using rule 23 (Expression)


State 113

   24 Expression: ComparisonExpression NE ComparisonExpression .

    $default  reduce using rule 24 (Expression)


State 114

   28 WhileStatement: WHILE '(' Expression ')' . Statement

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    ';'     shift, and go to state 44
    '{'     shift, and go to state 45

    AssignmentStatment  go to state 46
    IfStatement         go to state 47
    WhileStatement      go to state 48
    ReturnStatement     go to state 72
    BlockStatement      go to state 50
    EmptyStatement      go to state 51
    Statement           go to state 120


State 115

   25 AssignmentStatment: ID '=' Expression ';' .

    $default  reduce using rule 25 (AssignmentStatment)


State 116

   26 IfStatement: IF '(' Expression ')' Statement .
   27            | IF '(' Expression ')' Statement . ELSE Statement

    ELSE  shift, and go to state 121

    $default  reduce using rule 26 (IfStatement)


State 117

    1 FunctionArgList: '&' ID .

    $default  reduce using rule 1 (FunctionArgList)


State 118

    6 UnaryExpression: ID '(' FunctionArgList ')' .

    $default  reduce using rule 6 (UnaryExpression)


State 119

    3 FunctionArgList: Expression ',' . FunctionArgList

    CONSTANT  shift, and go to state 59
    ID        shift, and go to state 60
    '+'       shift, and go to state 61
    '-'       shift, and go to state 62
    '&'       shift, and go to state 99
    '('       shift, and go to state 63

    FunctionArgList           go to state 122
    UnaryExpression           go to state 65
    MultiplicativeExpression  go to state 66
    AdditiveExpression        go to state 67
    ComparisonExpression      go to state 68
    Expression                go to state 102


State 120

   28 WhileStatement: WHILE '(' Expression ')' Statement .

    $default  reduce using rule 28 (WhileStatement)


State 121

   27 IfStatement: IF '(' Expression ')' Statement ELSE . Statement

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    ';'     shift, and go to state 44
    '{'     shift, and go to state 45

    AssignmentStatment  go to state 46
    IfStatement         go to state 47
    WhileStatement      go to state 48
    ReturnStatement     go to state 72
    BlockStatement      go to state 50
    EmptyStatement      go to state 51
    Statement           go to state 123


State 122

    3 FunctionArgList: Expression ',' FunctionArgList .

    $default  reduce using rule 3 (FunctionArgList)


State 123

   27 IfStatement: IF '(' Expression ')' Statement ELSE Statement .

    $default  reduce using rule 27 (IfStatement)
